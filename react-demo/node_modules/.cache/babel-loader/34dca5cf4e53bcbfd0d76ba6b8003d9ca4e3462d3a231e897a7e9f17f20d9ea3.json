{"ast":null,"code":"var _jsxFileName = \"E:\\\\SynologyDrive\\\\TechProjects\\\\React-Projects\\\\react-tutorial\\\\src\\\\components\\\\02-tic-tac-toe\\\\Board.jsx\";\nimport Square from \"./components/02-tic-tac-toe/Square\";\nimport { calculateWinner } from \"./components/02-tic-tac-toe/calculateWinner.js\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Board(_ref) {\n  let {\n    xIsNext,\n    squares,\n    onPlay\n  } = _ref;\n  // Lift the state up to Game component; See `setHistory`, `setXIsNext`\n  // const [xIsNext, setXIsNext] = useState(true);\n  // const [squares, setSquares] = useState(Array(9).fill(null));\n\n  // Set X on each square\n  /* function handleClick(i) {\n     const nextSquares = squares.slice();\n     nextSquares[i] = \"X\";\n     setSquares(nextSquares);\n   } */\n\n  // Set O after setting X\n  function handleClick(i) {\n    // To prevent the X being overwritten by an O when clicking on the same square multiple times!\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n    // Immutability is important: call `.slice()` to create a copy of the squares array instead of modifying the existing array.\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    // Replace the following code with onPlay to be controlled fully by Game component\n    // setSquares(nextSquares);\n    // setXIsNext(!xIsNext);\n    onPlay(nextSquares);\n  }\n\n  // Add status to display results of the game\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[0],\n        onSquareClick: () => handleClick(0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[1],\n        onSquareClick: () => handleClick(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[2],\n        onSquareClick: () => handleClick(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[3],\n        onSquareClick: () => handleClick(3)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[4],\n        onSquareClick: () => handleClick(4)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[5],\n        onSquareClick: () => handleClick(5)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[6],\n        onSquareClick: () => handleClick(6)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[7],\n        onSquareClick: () => handleClick(7)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[8],\n        onSquareClick: () => handleClick(8)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n_c = Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["Square","calculateWinner","Board","xIsNext","squares","onPlay","handleClick","i","nextSquares","slice","winner","status"],"sources":["E:/SynologyDrive/TechProjects/React-Projects/react-tutorial/src/components/02-tic-tac-toe/Board.jsx"],"sourcesContent":["import Square from \"./components/02-tic-tac-toe/Square\";\nimport { calculateWinner } from \"./components/02-tic-tac-toe/calculateWinner.js\";\n\nexport default function Board({ xIsNext, squares, onPlay }) {\n\t// Lift the state up to Game component; See `setHistory`, `setXIsNext`\n\t// const [xIsNext, setXIsNext] = useState(true);\n\t// const [squares, setSquares] = useState(Array(9).fill(null));\n\n\t// Set X on each square\n\t/* function handleClick(i) {\n    const nextSquares = squares.slice();\n    nextSquares[i] = \"X\";\n    setSquares(nextSquares);\n  } */\n\n\t// Set O after setting X\n\tfunction handleClick(i) {\n\t\t// To prevent the X being overwritten by an O when clicking on the same square multiple times!\n\t\tif (squares[i] || calculateWinner(squares)) {\n\t\t\treturn;\n\t\t}\n\t\t// Immutability is important: call `.slice()` to create a copy of the squares array instead of modifying the existing array.\n\t\tconst nextSquares = squares.slice();\n\n\t\tif (xIsNext) {\n\t\t\tnextSquares[i] = \"X\";\n\t\t} else {\n\t\t\tnextSquares[i] = \"O\";\n\t\t}\n\t\t// Replace the following code with onPlay to be controlled fully by Game component\n\t\t// setSquares(nextSquares);\n\t\t// setXIsNext(!xIsNext);\n\t\tonPlay(nextSquares);\n\t}\n\n\t// Add status to display results of the game\n\tconst winner = calculateWinner(squares);\n\tlet status;\n\tif (winner) {\n\t\tstatus = \"Winner: \" + winner;\n\t} else {\n\t\tstatus = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"status\">{status}</div>\n\t\t\t<div className=\"board-row\">\n\t\t\t\t<Square value={squares[0]} onSquareClick={() => handleClick(0)} />\n\t\t\t\t<Square value={squares[1]} onSquareClick={() => handleClick(1)} />\n\t\t\t\t<Square value={squares[2]} onSquareClick={() => handleClick(2)} />\n\t\t\t</div>\n\t\t\t<div className=\"board-row\">\n\t\t\t\t<Square value={squares[3]} onSquareClick={() => handleClick(3)} />\n\t\t\t\t<Square value={squares[4]} onSquareClick={() => handleClick(4)} />\n\t\t\t\t<Square value={squares[5]} onSquareClick={() => handleClick(5)} />\n\t\t\t</div>\n\t\t\t<div className=\"board-row\">\n\t\t\t\t<Square value={squares[6]} onSquareClick={() => handleClick(6)} />\n\t\t\t\t<Square value={squares[7]} onSquareClick={() => handleClick(7)} />\n\t\t\t\t<Square value={squares[8]} onSquareClick={() => handleClick(8)} />\n\t\t\t</div>\n\t\t</>\n\t);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}