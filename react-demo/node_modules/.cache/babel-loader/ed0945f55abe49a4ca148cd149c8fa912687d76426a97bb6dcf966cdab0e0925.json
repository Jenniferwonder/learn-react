{"ast":null,"code":"var _jsxFileName = \"E:\\\\SynologyDrive\\\\TechProjects\\\\React-Projects\\\\react-tutorial\\\\src\\\\06-state-structure\\\\travel-plan\\\\TravelPlan.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { initialTravelPlan } from \"./places.js\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TravelPlan() {\n  _s();\n  const [plan, setPlan] = useState(initialTravelPlan);\n  function handleComplete(parentId, childId) {\n    const parent = plan[parentId];\n    // Create a new version of the parent place\n    // that doesn't include this child ID.\n    const nextParent = {\n      ...parent,\n      childIds: parent.childIds.filter(id => id !== childId)\n    };\n    // Update the root state object...\n    setPlan({\n      ...plan,\n      // ...so that it has the updated parent.\n      [parentId]: nextParent\n    });\n  }\n  const root = plan[0];\n  const planetIds = root.childIds;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Places to visit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: planetIds.map(id => /*#__PURE__*/_jsxDEV(PlaceTree, {\n        id: id,\n        parentId: 0,\n        placesById: plan,\n        onComplete: handleComplete\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n_s(TravelPlan, \"IkiTm5lcPrCI/rlS/X1a+e/J8G4=\");\n_c = TravelPlan;\nfunction PlaceTree(_ref) {\n  let {\n    id,\n    parentId,\n    placesById,\n    onComplete\n  } = _ref;\n  const place = placesById[id];\n  const childIds = place.childIds;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [place.title, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        onComplete(parentId, id);\n      },\n      children: \"Complete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this), childIds.length > 0 && /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: childIds.map(childId => /*#__PURE__*/_jsxDEV(PlaceTree, {\n        id: childId,\n        parentId: id,\n        placesById: placesById,\n        onComplete: onComplete\n      }, childId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }, this);\n}\n_c2 = PlaceTree;\nvar _c, _c2;\n$RefreshReg$(_c, \"TravelPlan\");\n$RefreshReg$(_c2, \"PlaceTree\");","map":{"version":3,"names":["useState","initialTravelPlan","TravelPlan","plan","setPlan","handleComplete","parentId","childId","parent","nextParent","childIds","filter","id","root","planetIds","map","PlaceTree","placesById","onComplete","place","title","length"],"sources":["E:/SynologyDrive/TechProjects/React-Projects/react-tutorial/src/06-state-structure/travel-plan/TravelPlan.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { initialTravelPlan } from \"./places.js\";\n\nexport default function TravelPlan() {\n\tconst [plan, setPlan] = useState(initialTravelPlan);\n\n\tfunction handleComplete(parentId, childId) {\n\t\tconst parent = plan[parentId];\n\t\t// Create a new version of the parent place\n\t\t// that doesn't include this child ID.\n\t\tconst nextParent = {\n\t\t\t...parent,\n\t\t\tchildIds: parent.childIds.filter((id) => id !== childId),\n\t\t};\n\t\t// Update the root state object...\n\t\tsetPlan({\n\t\t\t...plan,\n\t\t\t// ...so that it has the updated parent.\n\t\t\t[parentId]: nextParent,\n\t\t});\n\t}\n\n\tconst root = plan[0];\n\tconst planetIds = root.childIds;\n\treturn (\n\t\t<>\n\t\t\t<h2>Places to visit</h2>\n\t\t\t<ol>\n\t\t\t\t{planetIds.map((id) => (\n\t\t\t\t\t<PlaceTree\n\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\tid={id}\n\t\t\t\t\t\tparentId={0}\n\t\t\t\t\t\tplacesById={plan}\n\t\t\t\t\t\tonComplete={handleComplete}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ol>\n\t\t</>\n\t);\n}\n\nfunction PlaceTree({ id, parentId, placesById, onComplete }) {\n\tconst place = placesById[id];\n\tconst childIds = place.childIds;\n\treturn (\n\t\t<li>\n\t\t\t{place.title}\n\t\t\t<button\n\t\t\t\tonClick={() => {\n\t\t\t\t\tonComplete(parentId, id);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tComplete\n\t\t\t</button>\n\t\t\t{childIds.length > 0 && (\n\t\t\t\t<ol>\n\t\t\t\t\t{childIds.map((childId) => (\n\t\t\t\t\t\t<PlaceTree\n\t\t\t\t\t\t\tkey={childId}\n\t\t\t\t\t\t\tid={childId}\n\t\t\t\t\t\t\tparentId={id}\n\t\t\t\t\t\t\tplacesById={placesById}\n\t\t\t\t\t\t\tonComplete={onComplete}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</ol>\n\t\t\t)}\n\t\t</li>\n\t);\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,iBAAiB,QAAQ,aAAa;AAAC;AAAA;AAEhD,eAAe,SAASC,UAAU,GAAG;EAAA;EACpC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAACC,iBAAiB,CAAC;EAEnD,SAASI,cAAc,CAACC,QAAQ,EAAEC,OAAO,EAAE;IAC1C,MAAMC,MAAM,GAAGL,IAAI,CAACG,QAAQ,CAAC;IAC7B;IACA;IACA,MAAMG,UAAU,GAAG;MAClB,GAAGD,MAAM;MACTE,QAAQ,EAAEF,MAAM,CAACE,QAAQ,CAACC,MAAM,CAAEC,EAAE,IAAKA,EAAE,KAAKL,OAAO;IACxD,CAAC;IACD;IACAH,OAAO,CAAC;MACP,GAAGD,IAAI;MACP;MACA,CAACG,QAAQ,GAAGG;IACb,CAAC,CAAC;EACH;EAEA,MAAMI,IAAI,GAAGV,IAAI,CAAC,CAAC,CAAC;EACpB,MAAMW,SAAS,GAAGD,IAAI,CAACH,QAAQ;EAC/B,oBACC;IAAA,wBACC;MAAA,UAAI;IAAe;MAAA;MAAA;MAAA;IAAA,QAAK,eACxB;MAAA,UACEI,SAAS,CAACC,GAAG,CAAEH,EAAE,iBACjB,QAAC,SAAS;QAET,EAAE,EAAEA,EAAG;QACP,QAAQ,EAAE,CAAE;QACZ,UAAU,EAAET,IAAK;QACjB,UAAU,EAAEE;MAAe,GAJtBO,EAAE;QAAA;QAAA;QAAA;MAAA,QAMR;IAAC;MAAA;MAAA;MAAA;IAAA,QACE;EAAA,gBACH;AAEL;AAAC,GArCuBV,UAAU;AAAA,KAAVA,UAAU;AAuClC,SAASc,SAAS,OAA2C;EAAA,IAA1C;IAAEJ,EAAE;IAAEN,QAAQ;IAAEW,UAAU;IAAEC;EAAW,CAAC;EAC1D,MAAMC,KAAK,GAAGF,UAAU,CAACL,EAAE,CAAC;EAC5B,MAAMF,QAAQ,GAAGS,KAAK,CAACT,QAAQ;EAC/B,oBACC;IAAA,WACES,KAAK,CAACC,KAAK,eACZ;MACC,OAAO,EAAE,MAAM;QACdF,UAAU,CAACZ,QAAQ,EAAEM,EAAE,CAAC;MACzB,CAAE;MAAA,UACF;IAED;MAAA;MAAA;MAAA;IAAA,QAAS,EACRF,QAAQ,CAACW,MAAM,GAAG,CAAC,iBACnB;MAAA,UACEX,QAAQ,CAACK,GAAG,CAAER,OAAO,iBACrB,QAAC,SAAS;QAET,EAAE,EAAEA,OAAQ;QACZ,QAAQ,EAAEK,EAAG;QACb,UAAU,EAAEK,UAAW;QACvB,UAAU,EAAEC;MAAW,GAJlBX,OAAO;QAAA;QAAA;QAAA;MAAA,QAMb;IAAC;MAAA;MAAA;MAAA;IAAA,QAEH;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEP;AAAC,MA5BQS,SAAS;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}