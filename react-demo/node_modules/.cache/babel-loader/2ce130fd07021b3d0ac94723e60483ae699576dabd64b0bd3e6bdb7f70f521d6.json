{"ast":null,"code":"var _jsxFileName = \"E:\\\\SynologyDrive\\\\TechSkills\\\\React\\\\React-Projects\\\\Feedback-app\\\\feedback-app-practice\\\\feedback-app\\\\src\\\\components\\\\tic-tac-toe\\\\Tac.jsx\",\n  _s = $RefreshSig$();\nimport \"./style.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square(_ref) {\n  let {\n    value,\n    onSquareClick\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, this);\n}\n// Parent Component\n_c = Square;\nfunction Board(_ref2) {\n  let {\n    xIsNext,\n    squares,\n    onPlay\n  } = _ref2;\n  // const [xIsNext, setXIsNext] = useState(true);\n  // const [squares, setSquares] = useState(Array(9).fill(null));\n\n  function handleClick(i, j) {\n    if (squares[i][j] || calculateWinner(squares)) {\n      return;\n    }\n    // const nextSquares = squares.slice();\n    // Deep copy of squares\n    const nextSquares = JSON.parse(JSON.stringify(squares));\n    if (xIsNext) {\n      nextSquares[i][j] = \"X\";\n    } else {\n      nextSquares[i][j] = \"O\";\n    }\n    // setSquares(nextSquares);\n    // setXIsNext(!xIsNext);\n    onPlay(nextSquares);\n  }\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[0][0],\n        onSquareClick: () => handleClick(0, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[1][0],\n        onSquareClick: () => handleClick(1, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[2][0],\n        onSquareClick: () => handleClick(2, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[0][1],\n        onSquareClick: () => handleClick(0, 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[1][1],\n        onSquareClick: () => handleClick(1, 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[2][1],\n        onSquareClick: () => handleClick(2, 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[0][2],\n        onSquareClick: () => handleClick(0, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[1][2],\n        onSquareClick: () => handleClick(1, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[2][2],\n        onSquareClick: () => handleClick(2, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n_c2 = Board;\nexport default function Game() {\n  _s();\n  // const [xIsNext, setXIsNext] = useState(true);\n\n  // Create an empty 3*3 two-dimensional array\n  const [history, setHistory] = useState([Array(3).fill().map(() => Array(3).fill(null))]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n  // const currentSquares = history[history.length - 1];\n\n  function handlePlay(nextSquares) {\n    // setHistory([...history, nextSquares]);\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n    // setXIsNext(!xIsNext);\n  }\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n    // setXIsNext(nextMove % 2 === 0);\n  }\n\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = \"Go to move #\" + move;\n    } else {\n      description = \"Go to game start\";\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 4\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 3\n  }, this);\n}\n_s(Game, \"IOwUHUiAM3Oj0t4Ldvh2NrSXHCE=\");\n_c3 = Game;\nfunction calculateWinner(squares) {\n  for (let i = 0; i < 3; i++) {\n    if (squares[0][i] && squares[0][i] === squares[1][i] && squares[0][i] === squares[2][i]) {\n      return squares[0][i];\n    } else if (squares[i][0] && squares[i][0] === squares[i][1] && squares[i][0] === squares[i][2]) {\n      return squares[i][0];\n    }\n  }\n  if (squares[0][0] && squares[0][0] === squares[1][1] && squares[0][0] === squares[2][2]) {\n    return squares[0][0];\n  } else if (squares[0][2] && squares[0][2] === squares[1][1] && squares[0][2] === squares[2][0]) {\n    return squares[0][2];\n  }\n  return null;\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","Square","value","onSquareClick","Board","xIsNext","squares","onPlay","handleClick","i","j","calculateWinner","nextSquares","JSON","parse","stringify","winner","status","Game","history","setHistory","Array","fill","map","currentMove","setCurrentMove","currentSquares","handlePlay","nextHistory","slice","length","jumpTo","nextMove","moves","move","description"],"sources":["E:/SynologyDrive/TechSkills/React/React-Projects/Feedback-app/feedback-app-practice/feedback-app/src/components/tic-tac-toe/Tac.jsx"],"sourcesContent":["import \"./style.css\";\nimport { useState } from \"react\";\n\nfunction Square({ value, onSquareClick }) {\n\treturn (\n\t\t<button className=\"square\" onClick={onSquareClick}>\n\t\t\t{value}\n\t\t</button>\n\t);\n}\n// Parent Component\nfunction Board({ xIsNext, squares, onPlay }) {\n\t// const [xIsNext, setXIsNext] = useState(true);\n\t// const [squares, setSquares] = useState(Array(9).fill(null));\n\n\tfunction handleClick(i, j) {\n\t\tif (squares[i][j] || calculateWinner(squares)) {\n\t\t\treturn;\n\t\t}\n\t\t// const nextSquares = squares.slice();\n\t\t// Deep copy of squares\n\t\tconst nextSquares = JSON.parse(JSON.stringify(squares));\n\n\t\tif (xIsNext) {\n\t\t\tnextSquares[i][j] = \"X\";\n\t\t} else {\n\t\t\tnextSquares[i][j] = \"O\";\n\t\t}\n\t\t// setSquares(nextSquares);\n\t\t// setXIsNext(!xIsNext);\n\t\tonPlay(nextSquares);\n\t}\n\n\tconst winner = calculateWinner(squares);\n\tlet status;\n\tif (winner) {\n\t\tstatus = \"Winner: \" + winner;\n\t} else {\n\t\tstatus = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n\t}\n\treturn (\n\t\t<>\n\t\t\t<div className=\"status\">{status}</div>\n\t\t\t<div className=\"board-row\">\n\t\t\t\t<Square value={squares[0][0]} onSquareClick={() => handleClick(0, 0)} />\n\t\t\t\t<Square value={squares[1][0]} onSquareClick={() => handleClick(1, 0)} />\n\t\t\t\t<Square value={squares[2][0]} onSquareClick={() => handleClick(2, 0)} />\n\t\t\t</div>\n\t\t\t<div className=\"board-row\">\n\t\t\t\t<Square value={squares[0][1]} onSquareClick={() => handleClick(0, 1)} />\n\t\t\t\t<Square value={squares[1][1]} onSquareClick={() => handleClick(1, 1)} />\n\t\t\t\t<Square value={squares[2][1]} onSquareClick={() => handleClick(2, 1)} />\n\t\t\t</div>\n\t\t\t<div className=\"board-row\">\n\t\t\t\t<Square value={squares[0][2]} onSquareClick={() => handleClick(0, 2)} />\n\t\t\t\t<Square value={squares[1][2]} onSquareClick={() => handleClick(1, 2)} />\n\t\t\t\t<Square value={squares[2][2]} onSquareClick={() => handleClick(2, 2)} />\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default function Game() {\n\t// const [xIsNext, setXIsNext] = useState(true);\n\n\t// Create an empty 3*3 two-dimensional array\n\tconst [history, setHistory] = useState([\n\t\tArray(3)\n\t\t\t.fill()\n\t\t\t.map(() => Array(3).fill(null)),\n\t]);\n\tconst [currentMove, setCurrentMove] = useState(0);\n\tconst xIsNext = currentMove % 2 === 0;\n\tconst currentSquares = history[currentMove];\n\t// const currentSquares = history[history.length - 1];\n\n\tfunction handlePlay(nextSquares) {\n\t\t// setHistory([...history, nextSquares]);\n\t\tconst nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n\t\tsetHistory(nextHistory);\n\t\tsetCurrentMove(nextHistory.length - 1);\n\t\t// setXIsNext(!xIsNext);\n\t}\n\n\tfunction jumpTo(nextMove) {\n\t\tsetCurrentMove(nextMove);\n\t\t// setXIsNext(nextMove % 2 === 0);\n\t}\n\tconst moves = history.map((squares, move) => {\n\t\tlet description;\n\t\tif (move > 0) {\n\t\t\tdescription = \"Go to move #\" + move;\n\t\t} else {\n\t\t\tdescription = \"Go to game start\";\n\t\t}\n\t\treturn (\n\t\t\t<li key={move}>\n\t\t\t\t<button onClick={() => jumpTo(move)}>{description}</button>\n\t\t\t</li>\n\t\t);\n\t});\n\treturn (\n\t\t<div className=\"game\">\n\t\t\t<div className=\"game-board\">\n\t\t\t\t<Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} />\n\t\t\t</div>\n\t\t\t<div className=\"game-info\">\n\t\t\t\t<ol>{moves}</ol>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nfunction calculateWinner(squares) {\n\tfor (let i = 0; i < 3; i++) {\n\t\tif (\n\t\t\tsquares[0][i] &&\n\t\t\tsquares[0][i] === squares[1][i] &&\n\t\t\tsquares[0][i] === squares[2][i]\n\t\t) {\n\t\t\treturn squares[0][i];\n\t\t} else if (\n\t\t\tsquares[i][0] &&\n\t\t\tsquares[i][0] === squares[i][1] &&\n\t\t\tsquares[i][0] === squares[i][2]\n\t\t) {\n\t\t\treturn squares[i][0];\n\t\t}\n\t}\n\tif (\n\t\tsquares[0][0] &&\n\t\tsquares[0][0] === squares[1][1] &&\n\t\tsquares[0][0] === squares[2][2]\n\t) {\n\t\treturn squares[0][0];\n\t} else if (\n\t\tsquares[0][2] &&\n\t\tsquares[0][2] === squares[1][1] &&\n\t\tsquares[0][2] === squares[2][0]\n\t) {\n\t\treturn squares[0][2];\n\t}\n\treturn null;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}